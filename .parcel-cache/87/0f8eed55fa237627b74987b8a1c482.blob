"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _View = _interopRequireDefault(require("./View.js"));

var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//parcel 2 if its an image you have to use url: with it
class ResultsView extends _View.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "_parentElement", document.querySelector('.results'));

    _defineProperty(this, "_errorMessage", 'No recipe found for your query ! Please try again');

    _defineProperty(this, "_message", '');
  }

  _generateMarkup() {
    console.log(this._data); //let loop through the this._data and return the elements value that we needed inside the HTML:
    //will return the string

    return this._data.map(this._generateMarkupPreview).join('');
  }

  _generateMarkupPreview(result) {
    return `
        <li class="preview">
            <a class="preview__link " href="#${result.id}">
                <figure class="preview__fig">
                    <img src="${result.image}" alt="${result.title}" />
                </figure>
                <div class="preview__data">
                    <h4 class="preview__title">${result.title}</h4>
                    <p class="preview__publisher">${result.publisher}</p>
                    
                </div>
            </a>
        </li>
        `;
  }

}

var _default = new ResultsView(); //<div class="preview__user-generated">
//  <svg>
//   <use href="${icons}#icon-user"></use>
//</svg>
//</div>


exports.default = _default;